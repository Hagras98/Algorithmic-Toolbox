# Uses python3
import sys
from collections import namedtuple

Segment = namedtuple('Segment', 'start end')
       
def optimal_points(segments):
    points = []
    segments.sort(key = lambda x: x.end)
    while len(segments):
        s = segments[0]
        points.append(s.end)
        for s_ in segments[1:]:
            if s.end in range(s_.start, s_.end + 1):
                segments.remove(s_)
        segments.remove(s)
    return points

if __name__ == '__main__':
    data = []
    n = int(input())
    for i in range(n):    
        data.extend(list(map(int, input().split())))
    segments = list(map(lambda x: Segment(x[0], x[1]), zip(data[::2], data[1::2])))
    points = optimal_points(segments)
    print(len(points))
    print(*points)